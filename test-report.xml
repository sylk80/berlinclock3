<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/home/sylk/IdeaProjects/xpfarm/20230412_berlinclock3/__tests__/clockwork.test.js">
    <testCase name="BerlinClock testing for first row... should be a Clockwork class..." duration="2"/>
    <testCase name="BerlinClock testing for first row... should be a show_berlinclock method..." duration="0"/>
    <testCase name="BerlinClock testing for first row... berlin clock should have access to time" duration="0"/>
    <testCase name="BerlinClock testing for first row... berlin clock should have rows" duration="0"/>
    <testCase name="BerlinClock testing for first row... berlin clock should have multiple rows" duration="0"/>
    <testCase name="BerlinClock testing for first row... berlin clock&apos;s first row has 1 length" duration="1"/>
    <testCase name="BerlinClock testing for first row... berlin clock should show rows when asked..." duration="0"/>
    <testCase name="BerlinClock testing for first row... Berlin clock with time xx:xx:x1 should have 0 in first row..." duration="0"/>
    <testCase name="BerlinClock testing for first row... Berlin clock with time xx:xx:x3 should have 0 in first row..." duration="1"/>
    <testCase name="BerlinClock testing for first row... Berlin clock with time xx:xx:00 should have Y in first row..." duration="0"/>
    <testCase name="BerlinClock testing for first row... Berlin clock with time xx:xx:02 should have Y in first row..." duration="1"/>
    <testCase name="BerlinClock testing for second row... berlin clock&apos;s second row has 4 length" duration="0"/>
    <testCase name="BerlinClock testing for second row... Berlin clock with time 04:xx:xx should have 0s in second row..." duration="0"/>
    <testCase name="BerlinClock testing for second row... Berlin clock with time 05:00:00 should have Y in second rows first element..." duration="2">
      <failure message="Error: expect(received).toStrictEqual(expected) // deep equality"><![CDATA[Error: expect(received).toStrictEqual(expected) // deep equality

Expected: "Y"
Received: "O"
    at Object.<anonymous> (/home/sylk/IdeaProjects/xpfarm/20230412_berlinclock3/__tests__/clockwork.test.js:72:39)
    at Object.asyncJestTest (/home/sylk/IdeaProjects/xpfarm/20230412_berlinclock3/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37)
    at /home/sylk/IdeaProjects/xpfarm/20230412_berlinclock3/node_modules/jest-jasmine2/build/queueRunner.js:45:12
    at new Promise (<anonymous>)
    at mapper (/home/sylk/IdeaProjects/xpfarm/20230412_berlinclock3/node_modules/jest-jasmine2/build/queueRunner.js:28:19)
    at /home/sylk/IdeaProjects/xpfarm/20230412_berlinclock3/node_modules/jest-jasmine2/build/queueRunner.js:75:41
    at processTicksAndRejections (node:internal/process/task_queues:95:5)]]></failure>
    </testCase>
  </file>
</testExecutions>